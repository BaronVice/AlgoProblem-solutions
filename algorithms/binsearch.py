""" Здесь реализован бинпоиск для определения индекса искомого элемента в массиве.
Например: есть массив [1, 14, 24, 24, 77, 79, 81, 92]. Хотим найти индекс 79 - получаем 5.
На запрос 99 получим -1 (поскольку такого элемента нет). На 24 тут либо 2, либо 3 (их здесь два экземпляра) """


def bin_search(array: list, n: int, x: int):
    # Сперва определим границы поиска и где будет лежать ответ (индекс).
    # Скажу, что ответ будет в правой границе (right).
    # Тогда left = -1 (чтобы right мог дойти до 0).
    # right = n-1 (это индекс последнего элемента).
    left, right = -1, n-1
    # Пока left и right не находятся рядом друг с другом (left + 1 < right).
    while left + 1 < right:
        # Тыкаем в середину.
        mid = (left + right) // 2
        # Если элемент на выбранной позиции меньше искомого значения, то
        # Откидываем левую половину, переместив левую границу к середине.
        if array[mid] < x:
            left = mid
        # Иначе элемент больше или РАВЕН тому, что мы ищем.
        # Тогда откидываем правую половину - правую границу ставим на середину.
        else:
            right = mid
    
    # Элемента может и не быть в массиве, поэтому сделаем проверку:
    # Существует - вернем индекс. Не существует - -1.
    return right if array[right] == x else -1


def main():
    ...


if __name__ == "__main__":
    main()
