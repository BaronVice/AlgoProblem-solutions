""" Так вот, есть карточки Юли со значениями кратными 4 (надо для дальнейшей пропорции). На каждую
карточку Юли есть карточка Васи, которая на четверть меньше значения соответствуюшей Юлиной карточки.
Значения карточек даются в порядке возрастания. Это значит, что выбранная карточка Васи будет лежать по
массиву раньше, чем соответсвующая Васиной карточка Юли. Если идти с начала массива и на текущую карточку
искать и затем удалять такую, что ее значение на четверть больше текущей, то пройдя по всему массиву
останутся только Васины карточки.

Наверное в задаче предполагался вариант бин поиска (но я его не пробовал), однако возможен и другой подход.
Нам нужна такая структура, которая быстро определит, есть ли элемент в коллекции или нет и если есть,
то быстро удалит его. При этом, нам надо сохранить порядок элементов, иначе в конце для вывода ответа
придется сортировать. Используем LinkedHashMap """

def main():
    # С Python 3.7 словарь имеет структуру LinkedHashMap
    numbers = dict()
    for _ in range(int(input())):
        number = int(input())
        # Значения карточек могут повторяться, поэтому key - значение карточки, value - количество 
        numbers[number] = 1 if number not in numbers else numbers[number] + 1

    for number in numbers:
        # Выводим карточки Васи
        for _ in range(numbers[number]):
            print(number)
        
        # Здесь как бы вычеркиваем карточки Юли, в количестве карточек Васи с текущим значением
        if numbers[number]:
            numbers[number // 3 * 4] -= numbers[number]
            

if __name__ == "__main__":
    main()